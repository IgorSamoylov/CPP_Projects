// PREPROCESSOR_COMMANDS.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream> // #include <в скобочка> - поиск препроцессором файла в системном каталоге C++

#include "Header_Constants.h" // В кавычках - поиск препроцессором файла сначала в каталоге проекта

#define MY_FAVORITE_NUMBER 30  // Определили, что везде в тексте программы MY_FAVORITE_NUMBER заменяется на 30 
                                // на этапе обработки препроцессором (может быть указано в любом месте текста программы)
#define MASTER 

int main()
{
    std::cout << MY_FAVORITE_NUMBER << std::endl;

#ifdef MASTER
    std::cout << "THIS WILL BE ACTIVATED!" << std::endl;
#endif // Если определен MASTER то этот блок кода будет выполняться

#ifndef SLAVE
    std::cout << "THIS WILL BE ACTIVATED TOO!!!" << std::endl;
#endif // Если НЕ определен SLAVE то этот блок кода будет выполняться


    std::cout << "GRAVITY IS EQUAL= " << CONSTANTS::gravity << std::endl; // :: - опреатор расширения пространства видимости

    std::cout << CONSTANTS::alpha << std::endl;

}



















// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
